FROM pytorch/pytorch:2.7.1-cuda12.8-cudnn9-runtime
RUN apt-get update && \
    apt-get install -y --no-install-recommends git ffmpeg && \
    rm -rf /var/lib/apt/lists/*
RUN pip install --no-cache-dir --upgrade pip
RUN pip install --no-cache-dir openai-whisper==20250625 flask gunicorn
RUN mkdir -p /app
WORKDIR /app
RUN echo 'from flask import Flask, request, jsonify' > app.py && \
    echo 'import whisper' >> app.py && \
    echo 'import tempfile' >> app.py && \
    echo 'import os' >> app.py && \
    echo '' >> app.py && \
    echo 'app = Flask(__name__)' >> app.py && \
    echo 'model = whisper.load_model("base")' >> app.py && \
    echo '' >> app.py && \
    echo '@app.route("/transcribe", methods=["POST"])' >> app.py && \
    echo 'def transcribe():' >> app.py && \
    echo '    if "audio" not in request.files:' >> app.py && \
    echo '        return jsonify({"error": "No audio file"}), 400' >> app.py && \
    echo '    audio_file = request.files["audio"]' >> app.py && \
    echo '    with tempfile.NamedTemporaryFile(delete=False) as tmp_file:' >> app.py && \
    echo '        audio_file.save(tmp_file.name)' >> app.py && \
    echo '        result = model.transcribe(tmp_file.name)' >> app.py && \
    echo '        os.unlink(tmp_file.name)' >> app.py && \
    echo '    return jsonify({"text": result["text"]})' >> app.py && \
    echo '' >> app.py && \
    echo 'if __name__ == "__main__":' >> app.py && \
    echo '    app.run(host="0.0.0.0", port=9000)' >> app.py
EXPOSE 9000
CMD ["python", "app.py"]